// Code generated by ent, DO NOT EDIT.

package ent

import (
	"erm/internal/db/ent/schema"
	"erm/internal/db/ent/users"
	"time"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	usersFields := schema.Users{}.Fields()
	_ = usersFields
	// usersDescPasswordHash is the schema descriptor for password_hash field.
	usersDescPasswordHash := usersFields[2].Descriptor()
	// users.PasswordHashValidator is a validator for the "password_hash" field. It is called by the builders before save.
	users.PasswordHashValidator = usersDescPasswordHash.Validators[0].(func(string) error)
	// usersDescUserStatus is the schema descriptor for user_status field.
	usersDescUserStatus := usersFields[3].Descriptor()
	// users.DefaultUserStatus holds the default value on creation for the user_status field.
	users.DefaultUserStatus = usersDescUserStatus.Default.(int)
	// users.UserStatusValidator is a validator for the "user_status" field. It is called by the builders before save.
	users.UserStatusValidator = usersDescUserStatus.Validators[0].(func(int) error)
	// usersDescUserRole is the schema descriptor for user_role field.
	usersDescUserRole := usersFields[4].Descriptor()
	// users.DefaultUserRole holds the default value on creation for the user_role field.
	users.DefaultUserRole = usersDescUserRole.Default.(string)
	// usersDescUpdatedAt is the schema descriptor for updated_at field.
	usersDescUpdatedAt := usersFields[5].Descriptor()
	// users.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	users.DefaultUpdatedAt = usersDescUpdatedAt.Default.(func() time.Time)
	// usersDescCreatedAt is the schema descriptor for created_at field.
	usersDescCreatedAt := usersFields[6].Descriptor()
	// users.DefaultCreatedAt holds the default value on creation for the created_at field.
	users.DefaultCreatedAt = usersDescCreatedAt.Default.(func() time.Time)
	// usersDescID is the schema descriptor for id field.
	usersDescID := usersFields[0].Descriptor()
	// users.DefaultID holds the default value on creation for the id field.
	users.DefaultID = usersDescID.Default.(func() uuid.UUID)
}
