// Code generated by ent, DO NOT EDIT.

package opinions

import (
	"erm/internal/db/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContainsFold(FieldID, id))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldName, v))
}

// Telephone applies equality check predicate on the "telephone" field. It's identical to TelephoneEQ.
func Telephone(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldTelephone, v))
}

// Time applies equality check predicate on the "time" field. It's identical to TimeEQ.
func Time(v time.Time) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldTime, v))
}

// Brand applies equality check predicate on the "brand" field. It's identical to BrandEQ.
func Brand(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldBrand, v))
}

// Resturtant applies equality check predicate on the "resturtant" field. It's identical to ResturtantEQ.
func Resturtant(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldResturtant, v))
}

// Outlook1 applies equality check predicate on the "outlook1" field. It's identical to Outlook1EQ.
func Outlook1(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldOutlook1, v))
}

// Outlook2 applies equality check predicate on the "outlook2" field. It's identical to Outlook2EQ.
func Outlook2(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldOutlook2, v))
}

// Outlook3 applies equality check predicate on the "outlook3" field. It's identical to Outlook3EQ.
func Outlook3(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldOutlook3, v))
}

// Waiting1 applies equality check predicate on the "waiting1" field. It's identical to Waiting1EQ.
func Waiting1(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldWaiting1, v))
}

// Waiting2 applies equality check predicate on the "waiting2" field. It's identical to Waiting2EQ.
func Waiting2(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldWaiting2, v))
}

// Ordering1 applies equality check predicate on the "ordering1" field. It's identical to Ordering1EQ.
func Ordering1(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldOrdering1, v))
}

// Ordering2 applies equality check predicate on the "ordering2" field. It's identical to Ordering2EQ.
func Ordering2(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldOrdering2, v))
}

// Ordering3 applies equality check predicate on the "ordering3" field. It's identical to Ordering3EQ.
func Ordering3(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldOrdering3, v))
}

// Service1 applies equality check predicate on the "service1" field. It's identical to Service1EQ.
func Service1(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldService1, v))
}

// Service2 applies equality check predicate on the "service2" field. It's identical to Service2EQ.
func Service2(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldService2, v))
}

// Service3 applies equality check predicate on the "service3" field. It's identical to Service3EQ.
func Service3(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldService3, v))
}

// Qunility1 applies equality check predicate on the "qunility1" field. It's identical to Qunility1EQ.
func Qunility1(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldQunility1, v))
}

// Qunility2 applies equality check predicate on the "qunility2" field. It's identical to Qunility2EQ.
func Qunility2(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldQunility2, v))
}

// Qunility3 applies equality check predicate on the "qunility3" field. It's identical to Qunility3EQ.
func Qunility3(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldQunility3, v))
}

// Value1 applies equality check predicate on the "value1" field. It's identical to Value1EQ.
func Value1(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldValue1, v))
}

// Value2 applies equality check predicate on the "value2" field. It's identical to Value2EQ.
func Value2(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldValue2, v))
}

// Comment applies equality check predicate on the "comment" field. It's identical to CommentEQ.
func Comment(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldComment, v))
}

// Rating applies equality check predicate on the "rating" field. It's identical to RatingEQ.
func Rating(v int) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldRating, v))
}

// Createdat applies equality check predicate on the "createdat" field. It's identical to CreatedatEQ.
func Createdat(v time.Time) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldCreatedat, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContainsFold(FieldName, v))
}

// TelephoneEQ applies the EQ predicate on the "telephone" field.
func TelephoneEQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldTelephone, v))
}

// TelephoneNEQ applies the NEQ predicate on the "telephone" field.
func TelephoneNEQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNEQ(FieldTelephone, v))
}

// TelephoneIn applies the In predicate on the "telephone" field.
func TelephoneIn(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldIn(FieldTelephone, vs...))
}

// TelephoneNotIn applies the NotIn predicate on the "telephone" field.
func TelephoneNotIn(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNotIn(FieldTelephone, vs...))
}

// TelephoneGT applies the GT predicate on the "telephone" field.
func TelephoneGT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGT(FieldTelephone, v))
}

// TelephoneGTE applies the GTE predicate on the "telephone" field.
func TelephoneGTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGTE(FieldTelephone, v))
}

// TelephoneLT applies the LT predicate on the "telephone" field.
func TelephoneLT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLT(FieldTelephone, v))
}

// TelephoneLTE applies the LTE predicate on the "telephone" field.
func TelephoneLTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLTE(FieldTelephone, v))
}

// TelephoneContains applies the Contains predicate on the "telephone" field.
func TelephoneContains(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContains(FieldTelephone, v))
}

// TelephoneHasPrefix applies the HasPrefix predicate on the "telephone" field.
func TelephoneHasPrefix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasPrefix(FieldTelephone, v))
}

// TelephoneHasSuffix applies the HasSuffix predicate on the "telephone" field.
func TelephoneHasSuffix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasSuffix(FieldTelephone, v))
}

// TelephoneEqualFold applies the EqualFold predicate on the "telephone" field.
func TelephoneEqualFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEqualFold(FieldTelephone, v))
}

// TelephoneContainsFold applies the ContainsFold predicate on the "telephone" field.
func TelephoneContainsFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContainsFold(FieldTelephone, v))
}

// TimeEQ applies the EQ predicate on the "time" field.
func TimeEQ(v time.Time) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldTime, v))
}

// TimeNEQ applies the NEQ predicate on the "time" field.
func TimeNEQ(v time.Time) predicate.Opinions {
	return predicate.Opinions(sql.FieldNEQ(FieldTime, v))
}

// TimeIn applies the In predicate on the "time" field.
func TimeIn(vs ...time.Time) predicate.Opinions {
	return predicate.Opinions(sql.FieldIn(FieldTime, vs...))
}

// TimeNotIn applies the NotIn predicate on the "time" field.
func TimeNotIn(vs ...time.Time) predicate.Opinions {
	return predicate.Opinions(sql.FieldNotIn(FieldTime, vs...))
}

// TimeGT applies the GT predicate on the "time" field.
func TimeGT(v time.Time) predicate.Opinions {
	return predicate.Opinions(sql.FieldGT(FieldTime, v))
}

// TimeGTE applies the GTE predicate on the "time" field.
func TimeGTE(v time.Time) predicate.Opinions {
	return predicate.Opinions(sql.FieldGTE(FieldTime, v))
}

// TimeLT applies the LT predicate on the "time" field.
func TimeLT(v time.Time) predicate.Opinions {
	return predicate.Opinions(sql.FieldLT(FieldTime, v))
}

// TimeLTE applies the LTE predicate on the "time" field.
func TimeLTE(v time.Time) predicate.Opinions {
	return predicate.Opinions(sql.FieldLTE(FieldTime, v))
}

// BrandEQ applies the EQ predicate on the "brand" field.
func BrandEQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldBrand, v))
}

// BrandNEQ applies the NEQ predicate on the "brand" field.
func BrandNEQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNEQ(FieldBrand, v))
}

// BrandIn applies the In predicate on the "brand" field.
func BrandIn(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldIn(FieldBrand, vs...))
}

// BrandNotIn applies the NotIn predicate on the "brand" field.
func BrandNotIn(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNotIn(FieldBrand, vs...))
}

// BrandGT applies the GT predicate on the "brand" field.
func BrandGT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGT(FieldBrand, v))
}

// BrandGTE applies the GTE predicate on the "brand" field.
func BrandGTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGTE(FieldBrand, v))
}

// BrandLT applies the LT predicate on the "brand" field.
func BrandLT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLT(FieldBrand, v))
}

// BrandLTE applies the LTE predicate on the "brand" field.
func BrandLTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLTE(FieldBrand, v))
}

// BrandContains applies the Contains predicate on the "brand" field.
func BrandContains(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContains(FieldBrand, v))
}

// BrandHasPrefix applies the HasPrefix predicate on the "brand" field.
func BrandHasPrefix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasPrefix(FieldBrand, v))
}

// BrandHasSuffix applies the HasSuffix predicate on the "brand" field.
func BrandHasSuffix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasSuffix(FieldBrand, v))
}

// BrandEqualFold applies the EqualFold predicate on the "brand" field.
func BrandEqualFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEqualFold(FieldBrand, v))
}

// BrandContainsFold applies the ContainsFold predicate on the "brand" field.
func BrandContainsFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContainsFold(FieldBrand, v))
}

// ResturtantEQ applies the EQ predicate on the "resturtant" field.
func ResturtantEQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldResturtant, v))
}

// ResturtantNEQ applies the NEQ predicate on the "resturtant" field.
func ResturtantNEQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNEQ(FieldResturtant, v))
}

// ResturtantIn applies the In predicate on the "resturtant" field.
func ResturtantIn(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldIn(FieldResturtant, vs...))
}

// ResturtantNotIn applies the NotIn predicate on the "resturtant" field.
func ResturtantNotIn(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNotIn(FieldResturtant, vs...))
}

// ResturtantGT applies the GT predicate on the "resturtant" field.
func ResturtantGT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGT(FieldResturtant, v))
}

// ResturtantGTE applies the GTE predicate on the "resturtant" field.
func ResturtantGTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGTE(FieldResturtant, v))
}

// ResturtantLT applies the LT predicate on the "resturtant" field.
func ResturtantLT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLT(FieldResturtant, v))
}

// ResturtantLTE applies the LTE predicate on the "resturtant" field.
func ResturtantLTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLTE(FieldResturtant, v))
}

// ResturtantContains applies the Contains predicate on the "resturtant" field.
func ResturtantContains(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContains(FieldResturtant, v))
}

// ResturtantHasPrefix applies the HasPrefix predicate on the "resturtant" field.
func ResturtantHasPrefix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasPrefix(FieldResturtant, v))
}

// ResturtantHasSuffix applies the HasSuffix predicate on the "resturtant" field.
func ResturtantHasSuffix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasSuffix(FieldResturtant, v))
}

// ResturtantEqualFold applies the EqualFold predicate on the "resturtant" field.
func ResturtantEqualFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEqualFold(FieldResturtant, v))
}

// ResturtantContainsFold applies the ContainsFold predicate on the "resturtant" field.
func ResturtantContainsFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContainsFold(FieldResturtant, v))
}

// Outlook1EQ applies the EQ predicate on the "outlook1" field.
func Outlook1EQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldOutlook1, v))
}

// Outlook1NEQ applies the NEQ predicate on the "outlook1" field.
func Outlook1NEQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNEQ(FieldOutlook1, v))
}

// Outlook1In applies the In predicate on the "outlook1" field.
func Outlook1In(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldIn(FieldOutlook1, vs...))
}

// Outlook1NotIn applies the NotIn predicate on the "outlook1" field.
func Outlook1NotIn(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNotIn(FieldOutlook1, vs...))
}

// Outlook1GT applies the GT predicate on the "outlook1" field.
func Outlook1GT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGT(FieldOutlook1, v))
}

// Outlook1GTE applies the GTE predicate on the "outlook1" field.
func Outlook1GTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGTE(FieldOutlook1, v))
}

// Outlook1LT applies the LT predicate on the "outlook1" field.
func Outlook1LT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLT(FieldOutlook1, v))
}

// Outlook1LTE applies the LTE predicate on the "outlook1" field.
func Outlook1LTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLTE(FieldOutlook1, v))
}

// Outlook1Contains applies the Contains predicate on the "outlook1" field.
func Outlook1Contains(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContains(FieldOutlook1, v))
}

// Outlook1HasPrefix applies the HasPrefix predicate on the "outlook1" field.
func Outlook1HasPrefix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasPrefix(FieldOutlook1, v))
}

// Outlook1HasSuffix applies the HasSuffix predicate on the "outlook1" field.
func Outlook1HasSuffix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasSuffix(FieldOutlook1, v))
}

// Outlook1EqualFold applies the EqualFold predicate on the "outlook1" field.
func Outlook1EqualFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEqualFold(FieldOutlook1, v))
}

// Outlook1ContainsFold applies the ContainsFold predicate on the "outlook1" field.
func Outlook1ContainsFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContainsFold(FieldOutlook1, v))
}

// Outlook2EQ applies the EQ predicate on the "outlook2" field.
func Outlook2EQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldOutlook2, v))
}

// Outlook2NEQ applies the NEQ predicate on the "outlook2" field.
func Outlook2NEQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNEQ(FieldOutlook2, v))
}

// Outlook2In applies the In predicate on the "outlook2" field.
func Outlook2In(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldIn(FieldOutlook2, vs...))
}

// Outlook2NotIn applies the NotIn predicate on the "outlook2" field.
func Outlook2NotIn(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNotIn(FieldOutlook2, vs...))
}

// Outlook2GT applies the GT predicate on the "outlook2" field.
func Outlook2GT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGT(FieldOutlook2, v))
}

// Outlook2GTE applies the GTE predicate on the "outlook2" field.
func Outlook2GTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGTE(FieldOutlook2, v))
}

// Outlook2LT applies the LT predicate on the "outlook2" field.
func Outlook2LT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLT(FieldOutlook2, v))
}

// Outlook2LTE applies the LTE predicate on the "outlook2" field.
func Outlook2LTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLTE(FieldOutlook2, v))
}

// Outlook2Contains applies the Contains predicate on the "outlook2" field.
func Outlook2Contains(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContains(FieldOutlook2, v))
}

// Outlook2HasPrefix applies the HasPrefix predicate on the "outlook2" field.
func Outlook2HasPrefix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasPrefix(FieldOutlook2, v))
}

// Outlook2HasSuffix applies the HasSuffix predicate on the "outlook2" field.
func Outlook2HasSuffix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasSuffix(FieldOutlook2, v))
}

// Outlook2EqualFold applies the EqualFold predicate on the "outlook2" field.
func Outlook2EqualFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEqualFold(FieldOutlook2, v))
}

// Outlook2ContainsFold applies the ContainsFold predicate on the "outlook2" field.
func Outlook2ContainsFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContainsFold(FieldOutlook2, v))
}

// Outlook3EQ applies the EQ predicate on the "outlook3" field.
func Outlook3EQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldOutlook3, v))
}

// Outlook3NEQ applies the NEQ predicate on the "outlook3" field.
func Outlook3NEQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNEQ(FieldOutlook3, v))
}

// Outlook3In applies the In predicate on the "outlook3" field.
func Outlook3In(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldIn(FieldOutlook3, vs...))
}

// Outlook3NotIn applies the NotIn predicate on the "outlook3" field.
func Outlook3NotIn(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNotIn(FieldOutlook3, vs...))
}

// Outlook3GT applies the GT predicate on the "outlook3" field.
func Outlook3GT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGT(FieldOutlook3, v))
}

// Outlook3GTE applies the GTE predicate on the "outlook3" field.
func Outlook3GTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGTE(FieldOutlook3, v))
}

// Outlook3LT applies the LT predicate on the "outlook3" field.
func Outlook3LT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLT(FieldOutlook3, v))
}

// Outlook3LTE applies the LTE predicate on the "outlook3" field.
func Outlook3LTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLTE(FieldOutlook3, v))
}

// Outlook3Contains applies the Contains predicate on the "outlook3" field.
func Outlook3Contains(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContains(FieldOutlook3, v))
}

// Outlook3HasPrefix applies the HasPrefix predicate on the "outlook3" field.
func Outlook3HasPrefix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasPrefix(FieldOutlook3, v))
}

// Outlook3HasSuffix applies the HasSuffix predicate on the "outlook3" field.
func Outlook3HasSuffix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasSuffix(FieldOutlook3, v))
}

// Outlook3EqualFold applies the EqualFold predicate on the "outlook3" field.
func Outlook3EqualFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEqualFold(FieldOutlook3, v))
}

// Outlook3ContainsFold applies the ContainsFold predicate on the "outlook3" field.
func Outlook3ContainsFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContainsFold(FieldOutlook3, v))
}

// Waiting1EQ applies the EQ predicate on the "waiting1" field.
func Waiting1EQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldWaiting1, v))
}

// Waiting1NEQ applies the NEQ predicate on the "waiting1" field.
func Waiting1NEQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNEQ(FieldWaiting1, v))
}

// Waiting1In applies the In predicate on the "waiting1" field.
func Waiting1In(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldIn(FieldWaiting1, vs...))
}

// Waiting1NotIn applies the NotIn predicate on the "waiting1" field.
func Waiting1NotIn(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNotIn(FieldWaiting1, vs...))
}

// Waiting1GT applies the GT predicate on the "waiting1" field.
func Waiting1GT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGT(FieldWaiting1, v))
}

// Waiting1GTE applies the GTE predicate on the "waiting1" field.
func Waiting1GTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGTE(FieldWaiting1, v))
}

// Waiting1LT applies the LT predicate on the "waiting1" field.
func Waiting1LT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLT(FieldWaiting1, v))
}

// Waiting1LTE applies the LTE predicate on the "waiting1" field.
func Waiting1LTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLTE(FieldWaiting1, v))
}

// Waiting1Contains applies the Contains predicate on the "waiting1" field.
func Waiting1Contains(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContains(FieldWaiting1, v))
}

// Waiting1HasPrefix applies the HasPrefix predicate on the "waiting1" field.
func Waiting1HasPrefix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasPrefix(FieldWaiting1, v))
}

// Waiting1HasSuffix applies the HasSuffix predicate on the "waiting1" field.
func Waiting1HasSuffix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasSuffix(FieldWaiting1, v))
}

// Waiting1EqualFold applies the EqualFold predicate on the "waiting1" field.
func Waiting1EqualFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEqualFold(FieldWaiting1, v))
}

// Waiting1ContainsFold applies the ContainsFold predicate on the "waiting1" field.
func Waiting1ContainsFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContainsFold(FieldWaiting1, v))
}

// Waiting2EQ applies the EQ predicate on the "waiting2" field.
func Waiting2EQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldWaiting2, v))
}

// Waiting2NEQ applies the NEQ predicate on the "waiting2" field.
func Waiting2NEQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNEQ(FieldWaiting2, v))
}

// Waiting2In applies the In predicate on the "waiting2" field.
func Waiting2In(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldIn(FieldWaiting2, vs...))
}

// Waiting2NotIn applies the NotIn predicate on the "waiting2" field.
func Waiting2NotIn(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNotIn(FieldWaiting2, vs...))
}

// Waiting2GT applies the GT predicate on the "waiting2" field.
func Waiting2GT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGT(FieldWaiting2, v))
}

// Waiting2GTE applies the GTE predicate on the "waiting2" field.
func Waiting2GTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGTE(FieldWaiting2, v))
}

// Waiting2LT applies the LT predicate on the "waiting2" field.
func Waiting2LT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLT(FieldWaiting2, v))
}

// Waiting2LTE applies the LTE predicate on the "waiting2" field.
func Waiting2LTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLTE(FieldWaiting2, v))
}

// Waiting2Contains applies the Contains predicate on the "waiting2" field.
func Waiting2Contains(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContains(FieldWaiting2, v))
}

// Waiting2HasPrefix applies the HasPrefix predicate on the "waiting2" field.
func Waiting2HasPrefix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasPrefix(FieldWaiting2, v))
}

// Waiting2HasSuffix applies the HasSuffix predicate on the "waiting2" field.
func Waiting2HasSuffix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasSuffix(FieldWaiting2, v))
}

// Waiting2EqualFold applies the EqualFold predicate on the "waiting2" field.
func Waiting2EqualFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEqualFold(FieldWaiting2, v))
}

// Waiting2ContainsFold applies the ContainsFold predicate on the "waiting2" field.
func Waiting2ContainsFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContainsFold(FieldWaiting2, v))
}

// Ordering1EQ applies the EQ predicate on the "ordering1" field.
func Ordering1EQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldOrdering1, v))
}

// Ordering1NEQ applies the NEQ predicate on the "ordering1" field.
func Ordering1NEQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNEQ(FieldOrdering1, v))
}

// Ordering1In applies the In predicate on the "ordering1" field.
func Ordering1In(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldIn(FieldOrdering1, vs...))
}

// Ordering1NotIn applies the NotIn predicate on the "ordering1" field.
func Ordering1NotIn(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNotIn(FieldOrdering1, vs...))
}

// Ordering1GT applies the GT predicate on the "ordering1" field.
func Ordering1GT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGT(FieldOrdering1, v))
}

// Ordering1GTE applies the GTE predicate on the "ordering1" field.
func Ordering1GTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGTE(FieldOrdering1, v))
}

// Ordering1LT applies the LT predicate on the "ordering1" field.
func Ordering1LT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLT(FieldOrdering1, v))
}

// Ordering1LTE applies the LTE predicate on the "ordering1" field.
func Ordering1LTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLTE(FieldOrdering1, v))
}

// Ordering1Contains applies the Contains predicate on the "ordering1" field.
func Ordering1Contains(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContains(FieldOrdering1, v))
}

// Ordering1HasPrefix applies the HasPrefix predicate on the "ordering1" field.
func Ordering1HasPrefix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasPrefix(FieldOrdering1, v))
}

// Ordering1HasSuffix applies the HasSuffix predicate on the "ordering1" field.
func Ordering1HasSuffix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasSuffix(FieldOrdering1, v))
}

// Ordering1EqualFold applies the EqualFold predicate on the "ordering1" field.
func Ordering1EqualFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEqualFold(FieldOrdering1, v))
}

// Ordering1ContainsFold applies the ContainsFold predicate on the "ordering1" field.
func Ordering1ContainsFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContainsFold(FieldOrdering1, v))
}

// Ordering2EQ applies the EQ predicate on the "ordering2" field.
func Ordering2EQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldOrdering2, v))
}

// Ordering2NEQ applies the NEQ predicate on the "ordering2" field.
func Ordering2NEQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNEQ(FieldOrdering2, v))
}

// Ordering2In applies the In predicate on the "ordering2" field.
func Ordering2In(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldIn(FieldOrdering2, vs...))
}

// Ordering2NotIn applies the NotIn predicate on the "ordering2" field.
func Ordering2NotIn(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNotIn(FieldOrdering2, vs...))
}

// Ordering2GT applies the GT predicate on the "ordering2" field.
func Ordering2GT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGT(FieldOrdering2, v))
}

// Ordering2GTE applies the GTE predicate on the "ordering2" field.
func Ordering2GTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGTE(FieldOrdering2, v))
}

// Ordering2LT applies the LT predicate on the "ordering2" field.
func Ordering2LT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLT(FieldOrdering2, v))
}

// Ordering2LTE applies the LTE predicate on the "ordering2" field.
func Ordering2LTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLTE(FieldOrdering2, v))
}

// Ordering2Contains applies the Contains predicate on the "ordering2" field.
func Ordering2Contains(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContains(FieldOrdering2, v))
}

// Ordering2HasPrefix applies the HasPrefix predicate on the "ordering2" field.
func Ordering2HasPrefix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasPrefix(FieldOrdering2, v))
}

// Ordering2HasSuffix applies the HasSuffix predicate on the "ordering2" field.
func Ordering2HasSuffix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasSuffix(FieldOrdering2, v))
}

// Ordering2EqualFold applies the EqualFold predicate on the "ordering2" field.
func Ordering2EqualFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEqualFold(FieldOrdering2, v))
}

// Ordering2ContainsFold applies the ContainsFold predicate on the "ordering2" field.
func Ordering2ContainsFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContainsFold(FieldOrdering2, v))
}

// Ordering3EQ applies the EQ predicate on the "ordering3" field.
func Ordering3EQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldOrdering3, v))
}

// Ordering3NEQ applies the NEQ predicate on the "ordering3" field.
func Ordering3NEQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNEQ(FieldOrdering3, v))
}

// Ordering3In applies the In predicate on the "ordering3" field.
func Ordering3In(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldIn(FieldOrdering3, vs...))
}

// Ordering3NotIn applies the NotIn predicate on the "ordering3" field.
func Ordering3NotIn(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNotIn(FieldOrdering3, vs...))
}

// Ordering3GT applies the GT predicate on the "ordering3" field.
func Ordering3GT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGT(FieldOrdering3, v))
}

// Ordering3GTE applies the GTE predicate on the "ordering3" field.
func Ordering3GTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGTE(FieldOrdering3, v))
}

// Ordering3LT applies the LT predicate on the "ordering3" field.
func Ordering3LT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLT(FieldOrdering3, v))
}

// Ordering3LTE applies the LTE predicate on the "ordering3" field.
func Ordering3LTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLTE(FieldOrdering3, v))
}

// Ordering3Contains applies the Contains predicate on the "ordering3" field.
func Ordering3Contains(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContains(FieldOrdering3, v))
}

// Ordering3HasPrefix applies the HasPrefix predicate on the "ordering3" field.
func Ordering3HasPrefix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasPrefix(FieldOrdering3, v))
}

// Ordering3HasSuffix applies the HasSuffix predicate on the "ordering3" field.
func Ordering3HasSuffix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasSuffix(FieldOrdering3, v))
}

// Ordering3EqualFold applies the EqualFold predicate on the "ordering3" field.
func Ordering3EqualFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEqualFold(FieldOrdering3, v))
}

// Ordering3ContainsFold applies the ContainsFold predicate on the "ordering3" field.
func Ordering3ContainsFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContainsFold(FieldOrdering3, v))
}

// Service1EQ applies the EQ predicate on the "service1" field.
func Service1EQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldService1, v))
}

// Service1NEQ applies the NEQ predicate on the "service1" field.
func Service1NEQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNEQ(FieldService1, v))
}

// Service1In applies the In predicate on the "service1" field.
func Service1In(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldIn(FieldService1, vs...))
}

// Service1NotIn applies the NotIn predicate on the "service1" field.
func Service1NotIn(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNotIn(FieldService1, vs...))
}

// Service1GT applies the GT predicate on the "service1" field.
func Service1GT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGT(FieldService1, v))
}

// Service1GTE applies the GTE predicate on the "service1" field.
func Service1GTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGTE(FieldService1, v))
}

// Service1LT applies the LT predicate on the "service1" field.
func Service1LT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLT(FieldService1, v))
}

// Service1LTE applies the LTE predicate on the "service1" field.
func Service1LTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLTE(FieldService1, v))
}

// Service1Contains applies the Contains predicate on the "service1" field.
func Service1Contains(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContains(FieldService1, v))
}

// Service1HasPrefix applies the HasPrefix predicate on the "service1" field.
func Service1HasPrefix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasPrefix(FieldService1, v))
}

// Service1HasSuffix applies the HasSuffix predicate on the "service1" field.
func Service1HasSuffix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasSuffix(FieldService1, v))
}

// Service1EqualFold applies the EqualFold predicate on the "service1" field.
func Service1EqualFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEqualFold(FieldService1, v))
}

// Service1ContainsFold applies the ContainsFold predicate on the "service1" field.
func Service1ContainsFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContainsFold(FieldService1, v))
}

// Service2EQ applies the EQ predicate on the "service2" field.
func Service2EQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldService2, v))
}

// Service2NEQ applies the NEQ predicate on the "service2" field.
func Service2NEQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNEQ(FieldService2, v))
}

// Service2In applies the In predicate on the "service2" field.
func Service2In(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldIn(FieldService2, vs...))
}

// Service2NotIn applies the NotIn predicate on the "service2" field.
func Service2NotIn(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNotIn(FieldService2, vs...))
}

// Service2GT applies the GT predicate on the "service2" field.
func Service2GT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGT(FieldService2, v))
}

// Service2GTE applies the GTE predicate on the "service2" field.
func Service2GTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGTE(FieldService2, v))
}

// Service2LT applies the LT predicate on the "service2" field.
func Service2LT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLT(FieldService2, v))
}

// Service2LTE applies the LTE predicate on the "service2" field.
func Service2LTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLTE(FieldService2, v))
}

// Service2Contains applies the Contains predicate on the "service2" field.
func Service2Contains(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContains(FieldService2, v))
}

// Service2HasPrefix applies the HasPrefix predicate on the "service2" field.
func Service2HasPrefix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasPrefix(FieldService2, v))
}

// Service2HasSuffix applies the HasSuffix predicate on the "service2" field.
func Service2HasSuffix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasSuffix(FieldService2, v))
}

// Service2EqualFold applies the EqualFold predicate on the "service2" field.
func Service2EqualFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEqualFold(FieldService2, v))
}

// Service2ContainsFold applies the ContainsFold predicate on the "service2" field.
func Service2ContainsFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContainsFold(FieldService2, v))
}

// Service3EQ applies the EQ predicate on the "service3" field.
func Service3EQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldService3, v))
}

// Service3NEQ applies the NEQ predicate on the "service3" field.
func Service3NEQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNEQ(FieldService3, v))
}

// Service3In applies the In predicate on the "service3" field.
func Service3In(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldIn(FieldService3, vs...))
}

// Service3NotIn applies the NotIn predicate on the "service3" field.
func Service3NotIn(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNotIn(FieldService3, vs...))
}

// Service3GT applies the GT predicate on the "service3" field.
func Service3GT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGT(FieldService3, v))
}

// Service3GTE applies the GTE predicate on the "service3" field.
func Service3GTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGTE(FieldService3, v))
}

// Service3LT applies the LT predicate on the "service3" field.
func Service3LT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLT(FieldService3, v))
}

// Service3LTE applies the LTE predicate on the "service3" field.
func Service3LTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLTE(FieldService3, v))
}

// Service3Contains applies the Contains predicate on the "service3" field.
func Service3Contains(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContains(FieldService3, v))
}

// Service3HasPrefix applies the HasPrefix predicate on the "service3" field.
func Service3HasPrefix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasPrefix(FieldService3, v))
}

// Service3HasSuffix applies the HasSuffix predicate on the "service3" field.
func Service3HasSuffix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasSuffix(FieldService3, v))
}

// Service3EqualFold applies the EqualFold predicate on the "service3" field.
func Service3EqualFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEqualFold(FieldService3, v))
}

// Service3ContainsFold applies the ContainsFold predicate on the "service3" field.
func Service3ContainsFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContainsFold(FieldService3, v))
}

// Qunility1EQ applies the EQ predicate on the "qunility1" field.
func Qunility1EQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldQunility1, v))
}

// Qunility1NEQ applies the NEQ predicate on the "qunility1" field.
func Qunility1NEQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNEQ(FieldQunility1, v))
}

// Qunility1In applies the In predicate on the "qunility1" field.
func Qunility1In(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldIn(FieldQunility1, vs...))
}

// Qunility1NotIn applies the NotIn predicate on the "qunility1" field.
func Qunility1NotIn(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNotIn(FieldQunility1, vs...))
}

// Qunility1GT applies the GT predicate on the "qunility1" field.
func Qunility1GT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGT(FieldQunility1, v))
}

// Qunility1GTE applies the GTE predicate on the "qunility1" field.
func Qunility1GTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGTE(FieldQunility1, v))
}

// Qunility1LT applies the LT predicate on the "qunility1" field.
func Qunility1LT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLT(FieldQunility1, v))
}

// Qunility1LTE applies the LTE predicate on the "qunility1" field.
func Qunility1LTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLTE(FieldQunility1, v))
}

// Qunility1Contains applies the Contains predicate on the "qunility1" field.
func Qunility1Contains(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContains(FieldQunility1, v))
}

// Qunility1HasPrefix applies the HasPrefix predicate on the "qunility1" field.
func Qunility1HasPrefix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasPrefix(FieldQunility1, v))
}

// Qunility1HasSuffix applies the HasSuffix predicate on the "qunility1" field.
func Qunility1HasSuffix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasSuffix(FieldQunility1, v))
}

// Qunility1EqualFold applies the EqualFold predicate on the "qunility1" field.
func Qunility1EqualFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEqualFold(FieldQunility1, v))
}

// Qunility1ContainsFold applies the ContainsFold predicate on the "qunility1" field.
func Qunility1ContainsFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContainsFold(FieldQunility1, v))
}

// Qunility2EQ applies the EQ predicate on the "qunility2" field.
func Qunility2EQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldQunility2, v))
}

// Qunility2NEQ applies the NEQ predicate on the "qunility2" field.
func Qunility2NEQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNEQ(FieldQunility2, v))
}

// Qunility2In applies the In predicate on the "qunility2" field.
func Qunility2In(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldIn(FieldQunility2, vs...))
}

// Qunility2NotIn applies the NotIn predicate on the "qunility2" field.
func Qunility2NotIn(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNotIn(FieldQunility2, vs...))
}

// Qunility2GT applies the GT predicate on the "qunility2" field.
func Qunility2GT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGT(FieldQunility2, v))
}

// Qunility2GTE applies the GTE predicate on the "qunility2" field.
func Qunility2GTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGTE(FieldQunility2, v))
}

// Qunility2LT applies the LT predicate on the "qunility2" field.
func Qunility2LT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLT(FieldQunility2, v))
}

// Qunility2LTE applies the LTE predicate on the "qunility2" field.
func Qunility2LTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLTE(FieldQunility2, v))
}

// Qunility2Contains applies the Contains predicate on the "qunility2" field.
func Qunility2Contains(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContains(FieldQunility2, v))
}

// Qunility2HasPrefix applies the HasPrefix predicate on the "qunility2" field.
func Qunility2HasPrefix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasPrefix(FieldQunility2, v))
}

// Qunility2HasSuffix applies the HasSuffix predicate on the "qunility2" field.
func Qunility2HasSuffix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasSuffix(FieldQunility2, v))
}

// Qunility2EqualFold applies the EqualFold predicate on the "qunility2" field.
func Qunility2EqualFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEqualFold(FieldQunility2, v))
}

// Qunility2ContainsFold applies the ContainsFold predicate on the "qunility2" field.
func Qunility2ContainsFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContainsFold(FieldQunility2, v))
}

// Qunility3EQ applies the EQ predicate on the "qunility3" field.
func Qunility3EQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldQunility3, v))
}

// Qunility3NEQ applies the NEQ predicate on the "qunility3" field.
func Qunility3NEQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNEQ(FieldQunility3, v))
}

// Qunility3In applies the In predicate on the "qunility3" field.
func Qunility3In(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldIn(FieldQunility3, vs...))
}

// Qunility3NotIn applies the NotIn predicate on the "qunility3" field.
func Qunility3NotIn(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNotIn(FieldQunility3, vs...))
}

// Qunility3GT applies the GT predicate on the "qunility3" field.
func Qunility3GT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGT(FieldQunility3, v))
}

// Qunility3GTE applies the GTE predicate on the "qunility3" field.
func Qunility3GTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGTE(FieldQunility3, v))
}

// Qunility3LT applies the LT predicate on the "qunility3" field.
func Qunility3LT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLT(FieldQunility3, v))
}

// Qunility3LTE applies the LTE predicate on the "qunility3" field.
func Qunility3LTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLTE(FieldQunility3, v))
}

// Qunility3Contains applies the Contains predicate on the "qunility3" field.
func Qunility3Contains(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContains(FieldQunility3, v))
}

// Qunility3HasPrefix applies the HasPrefix predicate on the "qunility3" field.
func Qunility3HasPrefix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasPrefix(FieldQunility3, v))
}

// Qunility3HasSuffix applies the HasSuffix predicate on the "qunility3" field.
func Qunility3HasSuffix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasSuffix(FieldQunility3, v))
}

// Qunility3EqualFold applies the EqualFold predicate on the "qunility3" field.
func Qunility3EqualFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEqualFold(FieldQunility3, v))
}

// Qunility3ContainsFold applies the ContainsFold predicate on the "qunility3" field.
func Qunility3ContainsFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContainsFold(FieldQunility3, v))
}

// Value1EQ applies the EQ predicate on the "value1" field.
func Value1EQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldValue1, v))
}

// Value1NEQ applies the NEQ predicate on the "value1" field.
func Value1NEQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNEQ(FieldValue1, v))
}

// Value1In applies the In predicate on the "value1" field.
func Value1In(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldIn(FieldValue1, vs...))
}

// Value1NotIn applies the NotIn predicate on the "value1" field.
func Value1NotIn(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNotIn(FieldValue1, vs...))
}

// Value1GT applies the GT predicate on the "value1" field.
func Value1GT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGT(FieldValue1, v))
}

// Value1GTE applies the GTE predicate on the "value1" field.
func Value1GTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGTE(FieldValue1, v))
}

// Value1LT applies the LT predicate on the "value1" field.
func Value1LT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLT(FieldValue1, v))
}

// Value1LTE applies the LTE predicate on the "value1" field.
func Value1LTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLTE(FieldValue1, v))
}

// Value1Contains applies the Contains predicate on the "value1" field.
func Value1Contains(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContains(FieldValue1, v))
}

// Value1HasPrefix applies the HasPrefix predicate on the "value1" field.
func Value1HasPrefix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasPrefix(FieldValue1, v))
}

// Value1HasSuffix applies the HasSuffix predicate on the "value1" field.
func Value1HasSuffix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasSuffix(FieldValue1, v))
}

// Value1EqualFold applies the EqualFold predicate on the "value1" field.
func Value1EqualFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEqualFold(FieldValue1, v))
}

// Value1ContainsFold applies the ContainsFold predicate on the "value1" field.
func Value1ContainsFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContainsFold(FieldValue1, v))
}

// Value2EQ applies the EQ predicate on the "value2" field.
func Value2EQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldValue2, v))
}

// Value2NEQ applies the NEQ predicate on the "value2" field.
func Value2NEQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNEQ(FieldValue2, v))
}

// Value2In applies the In predicate on the "value2" field.
func Value2In(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldIn(FieldValue2, vs...))
}

// Value2NotIn applies the NotIn predicate on the "value2" field.
func Value2NotIn(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNotIn(FieldValue2, vs...))
}

// Value2GT applies the GT predicate on the "value2" field.
func Value2GT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGT(FieldValue2, v))
}

// Value2GTE applies the GTE predicate on the "value2" field.
func Value2GTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGTE(FieldValue2, v))
}

// Value2LT applies the LT predicate on the "value2" field.
func Value2LT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLT(FieldValue2, v))
}

// Value2LTE applies the LTE predicate on the "value2" field.
func Value2LTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLTE(FieldValue2, v))
}

// Value2Contains applies the Contains predicate on the "value2" field.
func Value2Contains(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContains(FieldValue2, v))
}

// Value2HasPrefix applies the HasPrefix predicate on the "value2" field.
func Value2HasPrefix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasPrefix(FieldValue2, v))
}

// Value2HasSuffix applies the HasSuffix predicate on the "value2" field.
func Value2HasSuffix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasSuffix(FieldValue2, v))
}

// Value2EqualFold applies the EqualFold predicate on the "value2" field.
func Value2EqualFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEqualFold(FieldValue2, v))
}

// Value2ContainsFold applies the ContainsFold predicate on the "value2" field.
func Value2ContainsFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContainsFold(FieldValue2, v))
}

// CommentEQ applies the EQ predicate on the "comment" field.
func CommentEQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldComment, v))
}

// CommentNEQ applies the NEQ predicate on the "comment" field.
func CommentNEQ(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNEQ(FieldComment, v))
}

// CommentIn applies the In predicate on the "comment" field.
func CommentIn(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldIn(FieldComment, vs...))
}

// CommentNotIn applies the NotIn predicate on the "comment" field.
func CommentNotIn(vs ...string) predicate.Opinions {
	return predicate.Opinions(sql.FieldNotIn(FieldComment, vs...))
}

// CommentGT applies the GT predicate on the "comment" field.
func CommentGT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGT(FieldComment, v))
}

// CommentGTE applies the GTE predicate on the "comment" field.
func CommentGTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldGTE(FieldComment, v))
}

// CommentLT applies the LT predicate on the "comment" field.
func CommentLT(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLT(FieldComment, v))
}

// CommentLTE applies the LTE predicate on the "comment" field.
func CommentLTE(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldLTE(FieldComment, v))
}

// CommentContains applies the Contains predicate on the "comment" field.
func CommentContains(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContains(FieldComment, v))
}

// CommentHasPrefix applies the HasPrefix predicate on the "comment" field.
func CommentHasPrefix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasPrefix(FieldComment, v))
}

// CommentHasSuffix applies the HasSuffix predicate on the "comment" field.
func CommentHasSuffix(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldHasSuffix(FieldComment, v))
}

// CommentEqualFold applies the EqualFold predicate on the "comment" field.
func CommentEqualFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldEqualFold(FieldComment, v))
}

// CommentContainsFold applies the ContainsFold predicate on the "comment" field.
func CommentContainsFold(v string) predicate.Opinions {
	return predicate.Opinions(sql.FieldContainsFold(FieldComment, v))
}

// RatingEQ applies the EQ predicate on the "rating" field.
func RatingEQ(v int) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldRating, v))
}

// RatingNEQ applies the NEQ predicate on the "rating" field.
func RatingNEQ(v int) predicate.Opinions {
	return predicate.Opinions(sql.FieldNEQ(FieldRating, v))
}

// RatingIn applies the In predicate on the "rating" field.
func RatingIn(vs ...int) predicate.Opinions {
	return predicate.Opinions(sql.FieldIn(FieldRating, vs...))
}

// RatingNotIn applies the NotIn predicate on the "rating" field.
func RatingNotIn(vs ...int) predicate.Opinions {
	return predicate.Opinions(sql.FieldNotIn(FieldRating, vs...))
}

// RatingGT applies the GT predicate on the "rating" field.
func RatingGT(v int) predicate.Opinions {
	return predicate.Opinions(sql.FieldGT(FieldRating, v))
}

// RatingGTE applies the GTE predicate on the "rating" field.
func RatingGTE(v int) predicate.Opinions {
	return predicate.Opinions(sql.FieldGTE(FieldRating, v))
}

// RatingLT applies the LT predicate on the "rating" field.
func RatingLT(v int) predicate.Opinions {
	return predicate.Opinions(sql.FieldLT(FieldRating, v))
}

// RatingLTE applies the LTE predicate on the "rating" field.
func RatingLTE(v int) predicate.Opinions {
	return predicate.Opinions(sql.FieldLTE(FieldRating, v))
}

// CreatedatEQ applies the EQ predicate on the "createdat" field.
func CreatedatEQ(v time.Time) predicate.Opinions {
	return predicate.Opinions(sql.FieldEQ(FieldCreatedat, v))
}

// CreatedatNEQ applies the NEQ predicate on the "createdat" field.
func CreatedatNEQ(v time.Time) predicate.Opinions {
	return predicate.Opinions(sql.FieldNEQ(FieldCreatedat, v))
}

// CreatedatIn applies the In predicate on the "createdat" field.
func CreatedatIn(vs ...time.Time) predicate.Opinions {
	return predicate.Opinions(sql.FieldIn(FieldCreatedat, vs...))
}

// CreatedatNotIn applies the NotIn predicate on the "createdat" field.
func CreatedatNotIn(vs ...time.Time) predicate.Opinions {
	return predicate.Opinions(sql.FieldNotIn(FieldCreatedat, vs...))
}

// CreatedatGT applies the GT predicate on the "createdat" field.
func CreatedatGT(v time.Time) predicate.Opinions {
	return predicate.Opinions(sql.FieldGT(FieldCreatedat, v))
}

// CreatedatGTE applies the GTE predicate on the "createdat" field.
func CreatedatGTE(v time.Time) predicate.Opinions {
	return predicate.Opinions(sql.FieldGTE(FieldCreatedat, v))
}

// CreatedatLT applies the LT predicate on the "createdat" field.
func CreatedatLT(v time.Time) predicate.Opinions {
	return predicate.Opinions(sql.FieldLT(FieldCreatedat, v))
}

// CreatedatLTE applies the LTE predicate on the "createdat" field.
func CreatedatLTE(v time.Time) predicate.Opinions {
	return predicate.Opinions(sql.FieldLTE(FieldCreatedat, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Opinions) predicate.Opinions {
	return predicate.Opinions(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Opinions) predicate.Opinions {
	return predicate.Opinions(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Opinions) predicate.Opinions {
	return predicate.Opinions(func(s *sql.Selector) {
		p(s.Not())
	})
}
